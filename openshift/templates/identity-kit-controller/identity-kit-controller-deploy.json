{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}-deployment-template",
    "annotations": {
      "description": "Deployment template for a NodeJS server connected to a MongoDB database.",
      "tags": "nodejs",
      "iconClass": "icon-nodejs"
    }
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "name": "${NAME}",
          "app": "${APP_NAME}",
          "app-group": "${APP_GROUP}"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "${SERVICE_PORT}-tcp",
            "port": "${{SERVICE_PORT}}",
            "protocol": "TCP",
            "targetPort": "${{SERVICE_PORT}}"
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        },
        "labels": {
          "name": "${NAME}",
          "app": "${APP_NAME}",
          "app-group": "${APP_GROUP}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${NAME}:${TAG_NAME}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}",
              "app": "${APP_NAME}",
              "app-group": "${APP_GROUP}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": "${{SERVICE_PORT}}",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 5,
                  "periodSeconds": 30,
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 20,
                  "httpGet": {
                    "path": "/health",
                    "port": "${{SERVICE_PORT}}"
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 5,
                  "periodSeconds": 60,
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 20,
                  "httpGet": {
                    "path": "/health",
                    "port": "${{SERVICE_PORT}}"
                  }
                },
                "env": [
                  {
                    "name": "PORT",
                    "value": "${SERVICE_PORT}"
                  },
                  {
                    "name": "DB_SERVICE",
                    "value": "${DB_SERVICE}"
                  },
                  {
                    "name": "DB_PORT",
                    "value": "${DB_PORT}"
                  },
                  {
                    "name": "DB_NAME",
                    "value": "${DB_NAME}"
                  },
                  {
                    "name": "DB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DB_SERVICE}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "DB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DB_SERVICE}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "AGENT_ADMIN_URL",
                    "value": "http://${AGENT_SERVICE_NAME}:${AGENT_ADMIN_PORT}"
                  },
                  {
                    "name": "AGENT_ADMIN_API_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${AGENT_SERVICE_NAME}",
                        "key": "admin-api-key"
                      }
                    }
                  },
                  {
                    "name": "SMTP_HOST",
                    "value": "${SMTP_SERVER_ADDRESS}"
                  },
                  {
                    "name": "SMTP_PORT",
                    "value": "${SMTP_SERVER_PORT}"
                  },
                  {
                    "name": "ADMIN_EMAIL",
                    "value": "${ADMIN_EMAILs}"
                  },
                  {
                    "name": "PUBLIC_SITE_URL",
                    "value": "${PUBLIC_SITE_URL}"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "HorizontalPodAutoscaler",
      "apiVersion": "autoscaling/v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "name": "${NAME}",
          "app": "${APP_NAME}",
          "app-group": "${APP_GROUP}"
        }
      },
      "spec": {
        "scaleTargetRef": {
          "kind": "DeploymentConfig",
          "name": "${NAME}"
        },
        "minReplicas": "${{MIN_REPLICAS}}",
        "maxReplicas": "${{MAX_REPLICAS}}"
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
      "required": true,
      "value": "identity-kit-controller"
    },
    {
      "name": "APP_NAME",
      "displayName": "App Name",
      "description": "Used to group components together in the OpenShift console.",
      "required": true,
      "value": "identity-kit"
    },
    {
      "name": "APP_GROUP",
      "displayName": "App Group",
      "description": "The name assigned to all of the deployments in this project.",
      "required": true,
      "value": "identity-kit-controller"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "devex-von-tools"
    },
    {
      "name": "SERVICE_PORT",
      "displayName": "Service Port",
      "required": true,
      "description": "The port exposed by the controller.",
      "value": "8080"
    },
    {
      "name": "DB_SERVICE",
      "displayName": "Database Service Name",
      "description": "The name of the database server/service.",
      "required": true,
      "value": "identity-kit-db"
    },
    {
      "name": "DB_PORT",
      "displayName": "Database Port",
      "required": true,
      "description": "The port exposed by the database service.",
      "value": "27017"
    },
    {
      "name": "DB_NAME",
      "displayName": "Database Name",
      "required": true,
      "description": "Name of the deployed database (see environment variables in deployed database).",
      "value": "identity_kit_db"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "latest"
    },
    {
      "name": "AGENT_SERVICE_NAME",
      "displayName": "Agent Service name",
      "description": "Agent service name",
      "required": true,
      "value": "identity-kit-agent"
    },
    {
      "name": "AGENT_ADMIN_PORT",
      "displayName": "Agent Admin Port",
      "description": "Agent admin port",
      "required": true,
      "value": "8024"
    },
    {
      "name": "SMTP_SERVER_ADDRESS",
      "displayName": "SMTP Server Address",
      "description": "SMTP Server Address",
      "required": true,
      "value": ""
    },
    {
      "name": "SMTP_SERVER_PORT",
      "displayName": "SMTP Server Port",
      "description": "SMTP Server Port",
      "required": true,
      "value": ""
    },
    {
      "name": "ADMIN_EMAIL",
      "displayName": "Admin Email",
      "description": "The email address to be used as sender for outging messages.",
      "required": true,
      "value": ""
    },
    {
      "name": "PUBLIC_SITE_URL",
      "displayName": "Public Site URL",
      "description": "Public Site URL",
      "required": true,
      "value": "https://identity-kit.pathfinder.gov.bc.ca/"
    },
    {
      "name": "MIN_REPLICAS",
      "displayName": "Minimum Replicas",
      "description": "The minimum number of pods to have running.",
      "required": true,
      "value": "1"
    },
    {
      "name": "MAX_REPLICAS",
      "displayName": "Maximum Replicas",
      "description": "The maximum number of pods to have running.",
      "required": true,
      "value": "2"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "10m"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "300m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "10Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "256Mi"
    }
  ]
}